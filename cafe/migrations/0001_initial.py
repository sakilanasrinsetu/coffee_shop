# Generated by Django 3.2.6 on 2022-09-12 07:57

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cafe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('address', models.CharField(max_length=550)),
                ('latitude', models.FloatField(default=0.0)),
                ('longitude', models.FloatField(default=0.0)),
                ('email', models.EmailField(max_length=100)),
                ('phone', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.CharField(max_length=350)),
                ('image', models.FileField(blank=True, null=True, upload_to='category')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CloudCafeInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('logo', models.FileField(blank=True, null=True, upload_to='logo')),
                ('address', models.CharField(max_length=550)),
                ('phone', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=100)),
                ('vat_registration_number', models.CharField(max_length=100)),
                ('vat_amount', models.FloatField(default=0.0)),
                ('delivery_amount', models.FloatField(default=0.0)),
                ('facebook_url', models.CharField(blank=True, max_length=500, null=True)),
                ('instagram_url', models.CharField(blank=True, max_length=500, null=True)),
                ('youtube_url', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('sub_title', models.CharField(blank=True, max_length=100, null=True)),
                ('slug', models.CharField(max_length=350)),
                ('image', models.FileField(blank=True, null=True, upload_to='food')),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_vat_applicable', models.BooleanField(default=True)),
                ('order_counter', models.IntegerField(default=0)),
                ('rating', models.FloatField(default=0.0)),
                ('total_rating', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('cafe', models.ManyToManyField(blank=True, related_name='foods', to='cafe.Cafe')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='foods', to='cafe.category')),
            ],
        ),
        migrations.CreateModel(
            name='FoodExtra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('price', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('food', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='food_extras', to='cafe.food')),
            ],
        ),
        migrations.CreateModel(
            name='FoodOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('price', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('food', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='food_options', to='cafe.food')),
            ],
        ),
        migrations.CreateModel(
            name='FoodOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_no', models.CharField(max_length=50, unique=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('ORDER_PLACED', 'User Confirmed'), ('PREPARING', 'Preparing'), ('PICKED', 'Picked'), ('DELIVERED', 'Delivered'), ('INVOICE', 'Invoice'), ('CANCELLED', 'Cancelled')], default='USER_CONFIRMED', max_length=50)),
                ('grand_total', models.FloatField(blank=True, default=0.0, null=True)),
                ('vat_amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('payable_amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('cafe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='food_orders', to='cafe.cafe')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='food_orders', to='accounts.customerinfo')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('review_text', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews', to='accounts.customerinfo')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews', to='cafe.foodorder')),
            ],
        ),
        migrations.CreateModel(
            name='OrderedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('status', models.CharField(choices=[('ORDER_PLACED', 'User Confirmed'), ('PREPARING', 'Preparing'), ('PICKED', 'Picked'), ('DELIVERED', 'Delivered'), ('CANCELLED', 'Cancelled')], default='ORDER_PLACED', max_length=120)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('food_extra', models.ManyToManyField(blank=True, related_name='ordered_items', to='cafe.FoodExtra')),
                ('food_option', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ordered_items', to='cafe.foodoption')),
                ('food_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ordered_items', to='cafe.foodorder')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('cafe', models.ManyToManyField(blank=True, null=True, related_name='notifications', to='cafe.Cafe')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('grand_total', models.FloatField(blank=True, default=0.0, null=True)),
                ('vat_amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('payable_amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('payment_status', models.CharField(choices=[('PAID', 'Paid'), ('UNPAID', 'Unpaid')], default='UNPAID', max_length=25)),
                ('order_info', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cafe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoices', to='cafe.cafe')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoices', to='cafe.foodorder')),
            ],
        ),
        migrations.CreateModel(
            name='FoodOrderLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_status', models.CharField(max_length=50)),
                ('pickup_time_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_time_at', models.DateTimeField(blank=True, null=True)),
                ('distance', models.FloatField(default=0.0)),
                ('total_time', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='food_order_logs', to='cafe.foodorder')),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='food_order_logs', to='accounts.cafestaffinformation')),
            ],
        ),
        migrations.AddField(
            model_name='cafe',
            name='cloud_cafe_information',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cafes', to='cafe.cloudcafeinformation'),
        ),
    ]
